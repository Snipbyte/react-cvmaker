{"ast":null,"code":"'use strict';\n\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar defineBuiltIn = require('../internals/define-built-in');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\nvar NOT_GENERIC = fails(function () {\n  return nativeToString.call({\n    source: 'a',\n    flags: 'b'\n  }) != '/a/b';\n});\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, {\n    unsafe: true\n  });\n}","map":{"version":3,"names":["PROPER_FUNCTION_NAME","require","PROPER","defineBuiltIn","anObject","$toString","fails","getRegExpFlags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","flags","INCORRECT_NAME","name","toString","R","pattern","unsafe"],"sources":["/home/kashif/Downloads/USB DATA/React Projects/cv maker react/node_modules/core-js/modules/es.regexp.to-string.js"],"sourcesContent":["'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar defineBuiltIn = require('../internals/define-built-in');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, { unsafe: true });\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,4BAA4B,CAAC,CAACC,MAAM;AACvE,IAAIC,aAAa,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AAC3D,IAAIG,QAAQ,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAChD,IAAII,SAAS,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACjD,IAAIK,KAAK,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AACzC,IAAIM,cAAc,GAAGN,OAAO,CAAC,+BAA+B,CAAC;AAE7D,IAAIO,SAAS,GAAG,UAAU;AAC1B,IAAIC,eAAe,GAAGC,MAAM,CAACC,SAAS;AACtC,IAAIC,cAAc,GAAGH,eAAe,CAACD,SAAS,CAAC;AAE/C,IAAIK,WAAW,GAAGP,KAAK,CAAC,YAAY;EAAE,OAAOM,cAAc,CAACE,IAAI,CAAC;IAAEC,MAAM,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAI,CAAC,CAAC,IAAI,MAAM;AAAE,CAAC,CAAC;AAC3G;AACA,IAAIC,cAAc,GAAGjB,oBAAoB,IAAIY,cAAc,CAACM,IAAI,IAAIV,SAAS;;AAE7E;AACA;AACA,IAAIK,WAAW,IAAII,cAAc,EAAE;EACjCd,aAAa,CAACO,MAAM,CAACC,SAAS,EAAEH,SAAS,EAAE,SAASW,QAAQ,GAAG;IAC7D,IAAIC,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;IACtB,IAAIiB,OAAO,GAAGhB,SAAS,CAACe,CAAC,CAACL,MAAM,CAAC;IACjC,IAAIC,KAAK,GAAGX,SAAS,CAACE,cAAc,CAACa,CAAC,CAAC,CAAC;IACxC,OAAO,GAAG,GAAGC,OAAO,GAAG,GAAG,GAAGL,KAAK;EACpC,CAAC,EAAE;IAAEM,MAAM,EAAE;EAAK,CAAC,CAAC;AACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}