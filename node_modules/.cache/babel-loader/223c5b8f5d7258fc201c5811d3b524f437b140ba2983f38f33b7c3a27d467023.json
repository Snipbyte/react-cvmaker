{"ast":null,"code":"var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\nvar handlePrototype = function handlePrototype(CollectionPrototype, COLLECTION_NAME) {\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n};\nfor (var COLLECTION_NAME in DOMIterables) {\n  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);\n}\nhandlePrototype(DOMTokenListPrototype, 'DOMTokenList');","map":{"version":3,"names":["global","require","DOMIterables","DOMTokenListPrototype","ArrayIteratorMethods","createNonEnumerableProperty","wellKnownSymbol","ITERATOR","TO_STRING_TAG","ArrayValues","values","handlePrototype","CollectionPrototype","COLLECTION_NAME","error","METHOD_NAME","prototype"],"sources":["/home/kashif/Downloads/USB DATA/React Projects/cv maker react/node_modules/core-js/modules/web.dom-collections.iterator.js"],"sourcesContent":["var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar DOMTokenListPrototype = require('../internals/dom-token-list-prototype');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nvar handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n};\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);\n}\n\nhandlePrototype(DOMTokenListPrototype, 'DOMTokenList');\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC3C,IAAIC,YAAY,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACxD,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,uCAAuC,CAAC;AAC5E,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,8BAA8B,CAAC;AAClE,IAAII,2BAA2B,GAAGJ,OAAO,CAAC,6CAA6C,CAAC;AACxF,IAAIK,eAAe,GAAGL,OAAO,CAAC,gCAAgC,CAAC;AAE/D,IAAIM,QAAQ,GAAGD,eAAe,CAAC,UAAU,CAAC;AAC1C,IAAIE,aAAa,GAAGF,eAAe,CAAC,aAAa,CAAC;AAClD,IAAIG,WAAW,GAAGL,oBAAoB,CAACM,MAAM;AAE7C,IAAIC,eAAe,GAAG,SAAlBA,eAAe,CAAaC,mBAAmB,EAAEC,eAAe,EAAE;EACpE,IAAID,mBAAmB,EAAE;IACvB;IACA,IAAIA,mBAAmB,CAACL,QAAQ,CAAC,KAAKE,WAAW,EAAE,IAAI;MACrDJ,2BAA2B,CAACO,mBAAmB,EAAEL,QAAQ,EAAEE,WAAW,CAAC;IACzE,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,mBAAmB,CAACL,QAAQ,CAAC,GAAGE,WAAW;IAC7C;IACA,IAAI,CAACG,mBAAmB,CAACJ,aAAa,CAAC,EAAE;MACvCH,2BAA2B,CAACO,mBAAmB,EAAEJ,aAAa,EAAEK,eAAe,CAAC;IAClF;IACA,IAAIX,YAAY,CAACW,eAAe,CAAC,EAAE,KAAK,IAAIE,WAAW,IAAIX,oBAAoB,EAAE;MAC/E;MACA,IAAIQ,mBAAmB,CAACG,WAAW,CAAC,KAAKX,oBAAoB,CAACW,WAAW,CAAC,EAAE,IAAI;QAC9EV,2BAA2B,CAACO,mBAAmB,EAAEG,WAAW,EAAEX,oBAAoB,CAACW,WAAW,CAAC,CAAC;MAClG,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdF,mBAAmB,CAACG,WAAW,CAAC,GAAGX,oBAAoB,CAACW,WAAW,CAAC;MACtE;IACF;EACF;AACF,CAAC;AAED,KAAK,IAAIF,eAAe,IAAIX,YAAY,EAAE;EACxCS,eAAe,CAACX,MAAM,CAACa,eAAe,CAAC,IAAIb,MAAM,CAACa,eAAe,CAAC,CAACG,SAAS,EAAEH,eAAe,CAAC;AAChG;AAEAF,eAAe,CAACR,qBAAqB,EAAE,cAAc,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}