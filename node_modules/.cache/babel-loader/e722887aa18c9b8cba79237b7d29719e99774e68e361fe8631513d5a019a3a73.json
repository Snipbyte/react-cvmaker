{"ast":null,"code":"'use strict';\n\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () {\n      return 7;\n    };\n    return ''[KEY](O) != 7;\n  });\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () {\n        return re;\n      };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n    re.exec = function () {\n      execCalled = true;\n      return null;\n    };\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n  if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return {\n            done: true,\n            value: uncurriedNativeRegExpMethod(regexp, str, arg2)\n          };\n        }\n        return {\n          done: true,\n          value: uncurriedNativeMethod(str, regexp, arg2)\n        };\n      }\n      return {\n        done: false\n      };\n    });\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};","map":{"version":3,"names":["require","uncurryThis","defineBuiltIn","regexpExec","fails","wellKnownSymbol","createNonEnumerableProperty","SPECIES","RegExpPrototype","RegExp","prototype","module","exports","KEY","exec","FORCED","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","re","constructor","flags","uncurriedNativeRegExpMethod","methods","nativeMethod","regexp","str","arg2","forceStringMethod","uncurriedNativeMethod","$exec","done","value","String"],"sources":["/home/kashif/Downloads/USB DATA/React Projects/cv maker react/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js"],"sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var uncurriedNativeMethod = uncurryThis(nativeMethod);\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };\n        }\n        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    defineBuiltIn(String.prototype, KEY, methods[0]);\n    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}