{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$({\n  target: 'Promise',\n  proto: true,\n  forced: FORCED_PROMISE_CONSTRUCTOR,\n  real: true\n}, {\n  'catch': function _catch(onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['catch'];\n  if (NativePromisePrototype['catch'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'catch', method, {\n      unsafe: true\n    });\n  }\n}","map":{"version":3,"names":["$","require","IS_PURE","FORCED_PROMISE_CONSTRUCTOR","CONSTRUCTOR","NativePromiseConstructor","getBuiltIn","isCallable","defineBuiltIn","NativePromisePrototype","prototype","target","proto","forced","real","onRejected","then","undefined","method","unsafe"],"sources":["/home/kashif/Downloads/USB DATA/React Projects/cv maker react/node_modules/core-js/modules/es.promise.catch.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;\nvar NativePromiseConstructor = require('../internals/promise-native-constructor');\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {\n  'catch': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\n// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`\nif (!IS_PURE && isCallable(NativePromiseConstructor)) {\n  var method = getBuiltIn('Promise').prototype['catch'];\n  if (NativePromisePrototype['catch'] !== method) {\n    defineBuiltIn(NativePromisePrototype, 'catch', method, { unsafe: true });\n  }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,4CAA4C,CAAC,CAACG,WAAW;AAClG,IAAIC,wBAAwB,GAAGJ,OAAO,CAAC,yCAAyC,CAAC;AACjF,IAAIK,UAAU,GAAGL,OAAO,CAAC,2BAA2B,CAAC;AACrD,IAAIM,UAAU,GAAGN,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIO,aAAa,GAAGP,OAAO,CAAC,8BAA8B,CAAC;AAE3D,IAAIQ,sBAAsB,GAAGJ,wBAAwB,IAAIA,wBAAwB,CAACK,SAAS;;AAE3F;AACA;AACAV,CAAC,CAAC;EAAEW,MAAM,EAAE,SAAS;EAAEC,KAAK,EAAE,IAAI;EAAEC,MAAM,EAAEV,0BAA0B;EAAEW,IAAI,EAAE;AAAK,CAAC,EAAE;EACpF,OAAO,EAAE,gBAAUC,UAAU,EAAE;IAC7B,OAAO,IAAI,CAACC,IAAI,CAACC,SAAS,EAAEF,UAAU,CAAC;EACzC;AACF,CAAC,CAAC;;AAEF;AACA,IAAI,CAACb,OAAO,IAAIK,UAAU,CAACF,wBAAwB,CAAC,EAAE;EACpD,IAAIa,MAAM,GAAGZ,UAAU,CAAC,SAAS,CAAC,CAACI,SAAS,CAAC,OAAO,CAAC;EACrD,IAAID,sBAAsB,CAAC,OAAO,CAAC,KAAKS,MAAM,EAAE;IAC9CV,aAAa,CAACC,sBAAsB,EAAE,OAAO,EAAES,MAAM,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;EAC1E;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}